"""
Даны два списка фруктов. Получить список фруктов, присутствующих в обоих исходных списках.
"""
from logging import exception

fr1 = ['Киви', 'Банан', 'Яблоко', 'Персик', 'Ананас']
fr2 = ['Банан', 'Персик', 'Ананас', 'Абрикос', 'Апельсин']

print([fr for fr in fr1 if fr in fr2])

"""
Дан список, заполненный произвольными числами. Получить список из элементов исходного, 
удовлетворяющих следующим условиям:
Элемент кратен 3,
Элемент положительный,
Элемент не кратен 4.
"""
import random

my_list = [random.randint(-100, 100) for i in range(1, 51)]
print(my_list)
true_list = [i for i in my_list if i % 3 == 0 and i > 0 and i % 4 != 0]
print(true_list)

"""
Напишите функцию которая принимает на вход список. Функция создает из этого списка новый список из квадратных корней 
чисел (если число положительное) и самих чисел (если число отрицательное) и возвращает результат 
(желательно применить генератор и тернарный оператор при необходимости). В результате работы функции исходный список 
не должен измениться.
"""
import copy
import math

print(my_list)


def fil(*args):
    return [(round(math.sqrt(i), 1) if i > 0 else i) for i in my_list]


print(list(fil(my_list)))
print(my_list)

"""
Написать функцию которая принимает на вход число от 1 до 100. Если число равно 13, функция поднимает исключительную 
ситуации ValueError иначе возвращает введенное число, возведенное в квадрат. Далее написать основной код программы. 
Пользователь вводит число. Введенное число передаем параметром в написанную функцию и печатаем результат, 
который вернула функция. Обработать возможность возникновения исключительной ситуации, 
которая поднимается внутри функции
"""

def fun(num):
    if num == 13:
        raise ValueError
    else:
        return num**2


num = int(input('Введите число от  1 до 100:  '))
try:
    print(fun(num))
except ValueError:
    print('13 число дьявола, покайся')



